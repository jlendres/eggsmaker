#!/bin/bash

set -x

# Source the program and version files
source src/version.py

# Set the program version
PROGRAM_NAME="eggsmaker"
PROGRAM_VERSIONED="${PROGRAM_NAME}-${version}"

# Get the architecture
arch=$(uname -m)

# Set the architecture suffix based on the architecture
case $arch in
    x86_64*)
        ARCHITECTURE="_amd64"
        ;;
    i*86)
        ARCHITECTURE="_i386"
        ;;
    aarch64)
        ARCHITECTURE="_arm64"
        ;;
    *)
        echo "Unsupported architecture: $arch"
        exit 1
        ;;
esac

# Clean up any existing packages and fakeroot directory
rm -f ${PROGRAM_NAME}-*.deb ${PROGRAM_NAME}-*.bin fakeroot -rf

# Create the fakeroot directory structure
mkdir -p fakeroot/opt/${PROGRAM_NAME}
mkdir -p fakeroot/usr/share/applications
mkdir -p fakeroot/usr/share/icons/hicolor/scalable/apps/
mkdir -p fakeroot/usr/bin


# Copy the files into the fakeroot directory
cp assets/${PROGRAM_NAME}.svg fakeroot/usr/share/icons/hicolor/scalable/apps/
cp assets/${PROGRAM_NAME}.desktop fakeroot/usr/share/applications
cp -r ${PROGRAM_NAME}.dist/* fakeroot/opt/${PROGRAM_NAME}

# Set the permissions for the copied files
find fakeroot/opt/${PROGRAM_NAME}/${PROGRAM_NAME}.bin -type f -exec chmod 644 -- {} +
find fakeroot/opt/${PROGRAM_NAME}/${PROGRAM_NAME}.bin -type d -exec chmod 755 -- {} +
find fakeroot/usr/share -type f -exec chmod 644 -- {} +
chmod +x fakeroot/opt/${PROGRAM_NAME}/${PROGRAM_NAME}.bin

# crea /usr/bin/${PROGRAM_NAME}
CURRENT=$(pwd)
cd ./fakeroot/usr/bin
ln -s ../../opt/${PROGRAM_NAME}/${PROGRAM_NAME}.bin ${PROGRAM_NAME}
cd ${CURRENT}

# Create the deb package
#fpm -C fakeroot -s dir -t deb -n "${PROGRAM}" -v ${VERSION} -p ${PROGRAM_VERSION}${ARCHITECTURE}.deb
fpm -C fakeroot -s dir -t deb -n "${PROGRAM_NAME}" -p ${PROGRAM_VERSIONED}${ARCHITECTURE}.deb

# Clean up the fakeroot directory
#rm "${PROGRAM}.dist" -rf
rm fakeroot -rf
